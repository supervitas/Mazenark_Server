package Users;

import org.bson.Document;
import org.json.JSONObject;

public class User implements UnityMongoSerializable {
    private String username;
    private String password;
    private int score;
    private boolean isGuest;
    private String token = null;

    User(String username, String password) {
        this.username = username;
        this.password = password;
    }
    public User() {}

    public int getScore() { return this.score;}
    public void setScore(int score) { this.score = score;}

    public String getUsername() {
        return username;
    }
    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }
    public void setPassword(String password) {
        this.password = password;
    }


    public String getToken() {
        return token;
    }
    public void setToken(String token) {
        this.token = token;
    }

    public boolean isGuest() {
        return isGuest;
    }
    public void setGuest(boolean guest) {isGuest = guest;}

    @Override
    public UnityMongoSerializable UpdateFromDocument(Document data) {
        username = data.getString("username");
        password = data.getString("password");
        score = data.getInteger("score");
        isGuest = data.getBoolean("isGuest");

        return this;
    }

    @Override
    public UnityMongoSerializable UpdateFromJSON(JSONObject data) {
        return null;
    }

    @Override
    public Document ToDocument() {
        Document result = new Document();

        result.append("username", username);
        result.append("password", password);
        result.append("score", score);
        result.append("isGuest", isGuest);

        return result;
    }

    @Override
    public JSONObject ToJSON() {
        return null;
    }

    // Auto-generated by IntelliJ
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        User user = (User) o;

        return isGuest == user.isGuest && username.equals(user.username) && password.equals(user.password);

    }
}
